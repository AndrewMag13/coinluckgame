from langich import langich
import psycopg2
from psycopg2 import Error
from former import former

try:
    conn = psycopg2.connect(user="postgres",
                                password="iwasbornfree",
                                host="127.0.0.1",
                                port="5432",
                                database="luck")
    conn.set_isolation_level(psycopg2.extensions.ISOLATION_LEVEL_AUTOCOMMIT)
except (Exception, Error) as error:
    print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å PostgreSQL", error)

pho = 'https://imbt.ga/ZFdnBeO4pg'

class temps:
        def fl():
            return('Choose language\n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫')
        def inter(message):
            return(f'''*–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é {message.from_user.id}‚ô¶* 
            \n–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –∏–≥—Ä—É-—Å–∏–º—É–ª—è—Ç–æ—Ä —Ñ–µ—Ä–º–µ—Ä–∞\n\n–í—ã–±—Ä–∞–≤ —è–∑—ã–∫ –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ: telegra.ph/Polzovatelskoe-soglashenie-07-06\n–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –±–æ–Ω—É—Å–Ω—ã–π –∫–æ–¥, –µ—Å–ª–∏ –µ–≥–æ —É –≤–∞—Å –Ω–µ—Ç –≤–≤–µ–¥–∏—Ç–µ BONUS\n\n–£–¥–∞—á–∏!üçÄ\n\n*Welcome {message.from_user.id}‚ô¶*
            \nThis bot is a farming simulator\n\nBy choosing the language you accept the User Agreement: telegra.ph/Polzovatelskoe-soglashenie-07-06\nYou can also get a bonus, if you dont have one, enter BONUS\n\nGood luck!üçÄ\n{pho}''')
        def intererr(message):
            return(f'*Reg. error, {message.from_user.id}!*')
        ###
        def market(message, plod, course):
            if langich(message) == "English":
                return(f'Here you can *exchange* your üåü to üí≤ and üí∏ to üí≤\nFor exchange you have {plod} üåü\n\nCurrent exchange course for üåü to üí≤: \n1 üîÑ = {course} üåü\nFrom each *exchange* you will receive 70% üí≤ and 30% üí∏\n\nFor exchange üí∏ to üí≤ current course: 1 üí∏ = 1.3 üí≤')
            else:
                return(f'–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ *–æ–±–º–µ–Ω—è—Ç—å* –≤–∞—à–∏ üåü –Ω–∞ üí≤ –∏ üí∏ –Ω–∞ üí≤\n–£ –≤–∞—Å –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ {plod} üåü\n\n–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –¥–ª—è –æ–±–º–µ–Ω–∞ üåü –Ω–∞ üí≤: \n1 üîÑ = {course} üåü\n–° –∫–∞–∂–¥–æ–≥–æ *–æ–±–º–µ–Ω–∞* –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 70% üí≤ –∏ 30% üí∏\n\n–ü—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ üí∏ –Ω–∞ üí≤ –∫—É—Ä—Å: 1 üí∏ = 1.3 üí≤')
        ###
        def main(message):
            if langich(message) == "English":
                return(f'*Hello {message.from_user.first_name}‚ô¶* \nYou are now in CoinLuck Game main menu\n{pho}')
            else:
                return(f'*–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é {message.from_user.first_name}‚ô¶* \n–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é CoinLuck Game\n{pho}')
        ###
        def trans(id, message):
            if langich(message) == "English":
                return(f'Here you can *transfer* üí≤ to other users by *id*. \nYour id: {id}\n\nTo transfer in a reply message, first enter *id*, then *transfer amount* separated by *space*.\nExample: 12 700\nYou can transfer one time from *10* üí≤ to *10.000* üí≤')
            else:
                return(f'–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ *–ø–µ—Ä–µ–≤–µ—Å—Ç–∏* üí≤ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ *id*. \n–í–∞—à id: {id}\n\n–î–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ *id* –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∑–∞—Ç–µ–º *—Å—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞* —á–µ—Ä–µ–∑ *–ø—Ä–æ–±–µ–ª*.\n–ü—Ä–∏–º–µ—Ä: 12 700\n–ï–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –æ—Ç *10* üí≤ –¥–æ *10.000* üí≤')
        def err(message):
            if langich(message) == "English":
                return('Error!')
            else:
                return('–û—à–∏–±–∫–∞!')
        def transsucc(message, plods, rubs, vivc, rub):
            if langich(message) == "English":
                return(f'*Done!*\n\nYou exchanged {plods} üåü to {rubs} üí≤ and to {vivc} üí∏\n\nYou have: {rub} üí≤')
            else:
                return(f'*–ì–æ—Ç–æ–≤–æ!*\n\n–í—ã –æ–±–º–µ–Ω—è–ª–∏ {plods} üåü –Ω–∞ {rubs} üí≤ –∏ –Ω–∞ {vivc} üí∏\n\n–£ –≤–∞—Å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ: {rub} üí≤')
        def transerr(message):
            if langich(message) == "English":
                return(f'Not enough actives!')
            else:
                return(f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')
        def transsucc2(message, vivc, rubs, rub):
            if langich(message) == "English":
                return(f'*Done!*\n\nYou exchanged {vivc} üí∏ to {rubs} üí≤\n\nYou have: {rub} üí≤')
            else:
                return(f'*–ì–æ—Ç–æ–≤–æ!*\n\n–í—ã –æ–±–º–µ–Ω—è–ª–∏ {vivc} üí∏ –Ω–∞ {rubs} üí≤\n\n–£ –≤–∞—Å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ: {rub} üí≤')
        ###
        def choose(message):
            if langich(message) == "English":
                return('Select game')
            else:
                return('–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É')
        ###
        def stavka13(message):
            if langich(message) == "English":
                return('Place your *bet*\n\Bet must be from 10 üí≤ to 10000 üí≤\nYou can also enter custom bet in reply message')
            else:
                return('–î–µ–ª–∞–π—Ç–µ *—Å—Ç–∞–≤–∫—É*\n\n–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 10 üí≤ –¥–æ 10.000 üí≤\n–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ —Å–≤–æ—é —Å—É–º–º—É –≤–≤–µ–¥—è –µ–µ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏')
        def number13(message):
            if langich(message) == "English":
                return('Enter number from 1 to 3')
            else:
                return('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3')
        def wrongent(message):
            if langich(message) == "English":
                return('Wrong enter!')
            else:
                return('–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!')
        def normstavka(message):
            if langich(message) == "English":
                return('Bet must be from 10 üí≤ to 10000 üí≤')
            else:
                return('–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 10 üí≤ –¥–æ 10000 üí≤')
        def win13(stavka, money, keff, cc, message):
            if langich(message) == "English":
                return(f'*Congratulations!üëè*\nYour winnings: {stavka * 3} üí≤\n\nYour current balance: {money} üí≤\nYour bet: {stavka} üí≤\n\nYour number: {keff}\nActual number: {cc}')
            else:  
                return(f'*–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!üëè*\n–í–∞—à –≤—ã–π–≥—Ä—ã—à: {stavka * 3} üí≤\n\n–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {money} üí≤\n–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: {stavka} üí≤\n\n–í–∞—à–µ —á–∏—Å–ª–æ: {keff}\n–í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ: {cc}')
        def lose13(keff, cc, message):
            if langich(message) == "English":
                return(f'Sorry, you lose!\n\nYour number: {keff}\nActual number: {cc}')
            else:
                return(f'–°–æ–∂–∞–ª–µ–µ–º, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\n\n–í–∞—à–µ —á–∏—Å–ª–æ: {keff}\n–ß–∏—Å–ª–æ: {cc}')
        def keffs(message):
            if langich(message) == "English":
                return('Enter coefficient\nCoefficient must be from 1.2 to 1000\n\nEntered coefficient will be truncate to 2 zeros after point\nExample: 2.4235 > 2.42')
            else:
                return('–í–≤–µ–¥–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç\n–ö–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1.2 –¥–æ 1000\n\n–í–≤–µ–¥–µ–Ω–Ω—ã–π –≤–∞–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç –æ–±—Ä–µ–∂–µ—Ç—Å—è –¥–æ 2 –Ω—É–ª–µ–π –ø–æ—Å–ª–µ —Ç–æ—á–∫–∏\n–ü—Ä–∏–º–µ—Ä: 2.4235 > 2.42')
        def otri(message):
            if langich(message) == "English":
                return('Enter number from 1 to 30\n\nIf you win you will get *30x* from your bet')
            else:
                return('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 30\n\n–ü—Ä–∏ –≤—ã–π–≥—Ä—ã—à–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ *30x* –æ—Ç –≤–∞—à–µ–π —Å—Ç–∞–≤–∫–∏')
        def otrwin(stavka, money, keff, cc, message):
            if langich(message) == "English":
                return(f'Congratulations!üëè \nYour winnings: {stavka * 30} üí≤\n\nYour current balance *{money} üí≤*\nYour bet: {stavka} üí≤\n\nYour number: {keff}\nActual nubmer: {cc}')
            else:
                return(f'–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!üëè \n–í–∞—à –≤—ã–π–≥—Ä—ã—à: {stavka * 30} üí≤\n\n–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å *{money} üí≤*\n–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: {stavka} üí≤\n\n–í–∞—à–µ —á–∏—Å–ª–æ: {keff}\n–ß–∏—Å–ª–æ: {cc}')
        def otrlose(keff, cc, message):
            if langich(message) == "English":
                return(f'Sorry, you lose!\n\nYour number: {keff}\nActual number: {cc}')
            else:
                return(f'–°–æ–∂–∞–ª–µ–µ–º, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\n\n–í–∞—à–µ —á–∏—Å–ª–æ: {keff}\n–ß–∏—Å–ª–æ: {cc}')
        def crashwin(keff, money, stavka, cc, message):
            if langich(message) == "English":
                return(f'Congratulations!üëè\nYour winnings: {keff * stavka} üí≤\n\nYour current balance: *{money} üí≤*\nYour bet: *{stavka}* üí≤\n\nYour coefficient: *{keff}*\nActual coefficient: {cc}')
            else:
                return(f'–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!üëè\n–í–∞—à –≤—ã–π–≥—Ä—ã—à: {keff * stavka} üí≤\n\n–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: *{money} üí≤*\n–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: *{stavka}* üí≤\n\n–í–∞—à –∫–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç: *{keff}*\n–ö–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç: {cc}')
        def crashlose(keff, cc, message):
            if langich(message) == "English":
                return(f'Sorry, you lose!\n\nYour coefficient: {keff}\nActual coefficient: {cc}')
            else:
                return(f'–°–æ–∂–∞–ª–µ–µ–º, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\n\n–í–∞—à –∫–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç: {keff}\n–ö–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç: {cc}')
        def oirs(message):
            if langich(message) == "English":
                return ('*Choose a side*\n\nCoefficient for sides:\n\n*Tail/Head* 2x \n*Edge* 25x')
            else:
                return('*–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ—Ä–æ–Ω—É*\n\n–ö–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç—ã –¥–ª—è —Å—Ç–æ—Ä–æ–Ω:\n\n*–û—Ä–µ–ª/–†–µ—à–∫–∞* 2x \n*–†–µ–±—Ä–æ* 25x')
        def oirep(wiin, money, rubb, message):
            if langich(message) == "English":
                return(f'{wiin}\n\nYour current balance:*{money} üí≤*\nYour bet: {rubb} üí≤')
            else:
                return(f'{wiin}\n\n–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: *{money} üí≤*\n–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: {rubb} üí≤')
        def bal(money, vivc, message):
            if langich(message) == "English":
                return(f'Here you can top-up or withdraw your balance\n\nYour balance for shopping: {money} üí≤\nYour balance for withdraw: {vivc} üí∏')
            else:
                return(f'–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∏–ª–∏ –≤—ã–≤–µ—Å—Ç–∏ –≤–∞—à –±–∞–ª–∞–Ω—Å\n\n–í–∞—à –±–∞–ª–∞–Ω—Å –¥–ª—è –ø–æ–∫—É–ø–æ–∫: {money} üí≤\n–í–∞—à –±–∞–ª–∞–Ω—Å –¥–ª—è –≤—ã–≤–æ–¥–∞: {vivc} üí∏')
        def pop(message):
            if langich(message) == "English":
                return("Enter the amount to top-up your account (minimal amount to top-up is 150 ‚ÇΩ)\n\nCourse:\n1 ‚ÇΩ = 100 üí≤\n25 % of the amount of your top-up will become üíµ")
            else:
                return('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∞—à–µ–≥–æ —Å—á–µ—Ç–∞ (–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 150 ‚ÇΩ)\n\n–ö—É—Ä—Å:\n1 —Ä—É–±–ª—å = 100 üí≤\n–ü—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ 25% –æ—Ç —Å—É–º–º—ã –≤–∞—à–µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ç–∞–Ω—É—Ç üíµ')
        def link(message):
            if langich(message) == "English":
                return('Your top-up link')
            else:
                return('–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è')
        def farm(all, plod, message):
            if langich(message) == "English":
                return(f'Thats your moderate mountain farm in the north of California by an extraordinarily beautiful rocky coast\nHere you can buy more fruit plants or collect ripe fruits\n\nOn your farm {str(plod)} üåü\n\nYou earn {all} üåü per hour')
            else:
                return(f'–≠—Ç–æ –≤–∞—à–∞ –Ω–µ–±–æ–ª—å—à–∞—è –≥–æ—Ä–Ω–∞—è —Ñ–µ—Ä–º–∞ –Ω–∞ —Å–µ–≤–µ—Ä–µ –ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏–∏ —É –Ω–µ–æ–±—ã—á–∞–π–Ω–æ –∫—Ä–∞—Å–∏–≤–æ–≥–æ –±–µ—Ä–µ–≥–∞\n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –µ—â–µ —Ñ—Ä—É–∫—Ç–æ–≤—ã—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π –∏–ª–∏ —Å–æ–±—Ä–∞—Ç—å —Å–ø–µ–ª—ã–µ –ø–ª–æ–¥—ã\n\n–£ –≤–∞—Å –Ω–∞ —Ñ–µ—Ä–º–µ {str(plod)} üåü\n\n–í —á–∞—Å –≤—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç–µ {all} üåü')
        def sbor(plod, message):
            if langich(message) == "English":
                return(f'Done! You collect {plod} üåü!')
            else:
                return(f'–ì–æ—Ç–æ–≤–æ –≤—ã —Å–æ–±—Ä–∞–ª–∏ {plod} üåü!')
        def water(message):
            if langich(message) == "English":
                return('Great! You watered your plants.\nWatering gives you a 1.2x for all your plants.\nThe bonus works until the beginning of the next hour and available only once a day')
            else:
                return('–û—Ç–ª–∏—á–Ω–æ! –í—ã –ø–æ–ª–∏–ª–∏ –≤–∞—à–∏ —Ä–∞—Å—Ç–µ–Ω–∏—è.\n–ü–æ–ª–∏–≤–∫–∞ —Ä–∞—Å—Ç–µ–Ω–∏–π –¥–∞–µ—Ç –≤–∞–º 1.2 –º–Ω–æ–∂–∏—Ç–µ–ª—å –¥–ª—è –≤—Å–µ—Ö –≤–∞—à–∏—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π.\n–ë–æ–Ω—É—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–æ –Ω–∞—á–∞–ª–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —á–∞—Å–∞ –∏ –¥–æ—Å—Ç—É–ø–µ–Ω —Ä–∞–∑ –≤ –¥–µ–Ω—å')
        def waterf(message):
            if langich(message) == "English":
                return('The bonus available only once a day')
            else:
                return('–ë–æ–Ω—É—Å –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å')
        def allf(myplod, message):
            if langich(message) == "English":
                return(f'You have: \n\n{myplod[2]} beds of strawberry üçì\n\n{myplod[3]} cherry trees üçí\n\n{myplod[4]} apple treesüçé\n\n{myplod[5]} banana trees üçå\n\n{myplod[6]} peach trees üçë\n\n{myplod[7]} grape trees üçá')
            else:
                return(f'–£ –≤–∞—Å: \n\n{myplod[2]} –≥—Ä—è–¥–æ–∫ –∫–ª—É–±–Ω–∏–∫–∏ üçì\n\n{myplod[3]} –≤–∏—à–Ω–µ–≤—ã—Ö –¥–µ—Ä–µ–≤—å–µ–≤ üçí\n\n{myplod[4]} —è–±–ª–æ—á–Ω—ã—Ö –¥–µ—Ä–µ–≤—å–µ–≤ üçé\n\n{myplod[5]} –±–∞–Ω–∞–Ω–æ–≤—ã—Ö –¥–µ—Ä–µ–≤—å–µ–≤ üçå\n\n{myplod[6]} –ø–µ—Ä—Å–∏–∫–æ–≤—ã—Ö –¥–µ—Ä–µ–≤—å–µ–≤ üçë\n\n{myplod[7]} –≤–∏–Ω–æ–≥—Ä–∞–¥–Ω—ã—Ö –¥–µ—Ä–µ–≤—å–µ–≤ üçá')
        def buyf(money, message):
            if langich(message) == "English":
                return(f'Here you can buy plants for your farm: \n\nüçì - 1.000 üí≤\nBrings 100 üåü per hour\n\nüçí - 5.000 üí≤\nBrings 600 üåü per hour\n\nüçé - 25.000 üí≤\nBrings 3.200 üåü per hour\n\nüçå - 100.000 üí≤\nBrings 14.000 üåü per hour\n\nüçë - 500.000 üí≤\nBrings 80.000 üåü per hour\n\nüçá - 1.000.000 üí≤\nBrings 200.000 üåü per hour\n\nYour balance: {former(money)} üí≤')
            else:
                return(f'–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏—è –Ω–∞ –≤–∞—à—É —Ñ–µ—Ä–º—É: \n\nüçì - 1.000 üí≤\n–ü—Ä–∏–Ω–æ—Å–∏—Ç 100 üåü –≤ —á–∞—Å\n\nüçí - 5.000 üí≤\n–ü—Ä–∏–Ω–æ—Å–∏—Ç 600 üåü –≤ —á–∞—Å\n\nüçé - 25.000 üí≤\n–ü—Ä–∏–Ω–æ—Å–∏—Ç 3.200 üåü –≤ —á–∞—Å\n\nüçå - 100.000 üí≤\n–ü—Ä–∏–Ω–æ—Å–∏—Ç 14.000 üåü –≤ —á–∞—Å\n\nüçë - 500.000 üí≤\n–ü—Ä–∏–Ω–æ—Å–∏—Ç 80.000 üåü –≤ —á–∞—Å\n\nüçá - 1.000.000 üí≤\n–ü—Ä–∏–Ω–æ—Å–∏—Ç 200.000 üåü –≤ —á–∞—Å\n\n–£ –≤–∞—Å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ: {former(money)} üí≤')
        def succ(message):
            if langich(message) == "English":
                return('Success!')
            else:
                return('–£—Å–ø–µ—à–Ω–æ!')
        def bon1(message):
            if langich(message) == "English":
                return('Congratulations!üëè Your bonus: 250 üí≤')
            else:
                return('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!üëè –í–∞—à –±–æ–Ω—É—Å: 250 üí≤')
        def bone(message):
            if langich(message) == "English":
                return('Great!üëè You have received your daily bonus in the amount of 200 üí≤')
            else:
                return('–û—Ç–ª–∏—á–Ω–æ!üëè –í—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –Ω–∞ —Å—É–º–º—É 200 üí≤')
        def rev(message):
            if langich(message) == "English":
                return('Here you can read or write reviews')
            else:
                return('–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤—ã')
        def goodrev(message):
            if langich(message) == "English":
                return('In reply message you can place your review, for every quality review you will recieve 50 üí≤')
            else:
                return('–í –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤, –∑–∞ –∫–∞–∂–¥—ã–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–∑—ã–≤ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 50 üí≤')
        def refl(message, refff):
            if langich(message) == "English":
                return(f'Your referal link: \nt.me/coinluck_bot?start={message.from_user.id} \n\nYou have {refff} referals!')
            else:
                return(f'–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: \nt.me/coinluck_bot?start={message.from_user.id} \n\n–£ –≤–∞—Å {refff} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤!')
        def transucc(mess, mon, message):
            if langich(message) == "English":
                return (f'*Done!* You transfer user *{mess[0]}* {mon} üí≤')
            else:
                return (f'*–ì–æ—Ç–æ–≤–æ!* –í—ã –ø–µ—Ä–µ–≤–µ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é *{mess[0]}* {mon} üí≤')
        def langu(l, message):
            if langich(message) == "English":
                return (f'Your current language: {l}\nHere you can change it anytime.')
            else:
                return (f'–í–∞—à —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫: {l}\n–í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –≤ —ç—Ç–æ–π –≤–∫–ª–∞–¥–∫–µ.')
        def langu2(ll, message):
            if langich(message) == "English":
                return (f'Done!\nYour new language: {ll}')
            else:
                return (f'–ì–æ—Ç–æ–≤–æ!\n–í–∞—à –Ω–æ–≤—ã–π —è–∑—ã–∫: {ll}')
        def winn(won, message):
            if langich(message) == "English":
                return f'Congrats!üëè \nYour winnings: {won} üí≤'
            else:
                return f'–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!üëè \n–í–∞—à –≤—ã–π–≥—Ä—ã—à: {won} üí≤'
        def orel(message):
            if langich(message) == "English":
                return 'Tail! \nYou lose'
            else:
                return '–û—Ä–µ–ª! \n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏'
        def edge(message):
            if langich(message) == "English":
                return 'Edge! \nYou lose'
            else:
                return '–†–µ–±—Ä–æ! \n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏'
        def head(message):
            if langich(message) == "English":
                return 'Head! \nYou lose'
            else:
                return '–†–µ—à–∫–∞! \n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏'
